---
alwaysApply: true
---
## 🛠️ 模式要求

### 🎨 设计模式（框架构思）
-   **目标**: 确定量化交易策略的系统架构、模块划分及组件间交互（特别是涉及 Binance API 的接口设计）。
-   **产出**: 高层次框架图（文本/Markdown图），详细说明数据流、API调用点等。
-   **原则**: 高内聚、低耦合、模块化、抽象封装、可扩展性，尤其关注交易逻辑的清晰与安全。
-   **示例框架**:
    ```mermaid
    graph LR
        A[行情数据] --> B(数据获取模块);
        B --> C{策略信号生成};
        C --> D(交易执行模块);
        D --> E[持仓/订单管理];
        B --> F[风控模块];
        D --> F;
    ```

### 🚀 实现模式（代码实现）
-   **目标**: 将“设计模式”中的框架转化为实际可执行的代码。
-   **核心要求**:
    -   **严格遵循设计模式**: 代码结构、模块划分、组件交互必须与设计模式完全一致，不允许偏差。
    -   **代码风格**： 文件结构、代码风格完全符合大厂Google要求。
    -   **最大限度的简洁性与效率**: 代码实现应尽可能简洁、直接，并高效利用资源。
    -   **文件大小限制**: 严格执行单个的文件行数不得超过 200 行，每个函数不能超过30行。
    -   **最小化修改原则**: 不大幅修改源文件，除非存在重大错误、安全漏洞需要修复，或者为适应设计模式的重大调整。切记不要忘了模块相关的__init__.py
    -   **遵循本规范其他语言和测试要求**: 主要使用中文，每次更改严格进行代码测试，保证设计更改或全新的文件能够通过测试。

### 🔍 调研模式（信息收集与分析）
-   **产出**: 调研报告、工具推荐、API 使用建议、技术方案分析等。
-   **原则**:
    -   **工具与资源**: 可使用各种工具（如搜索引擎、文档查阅、代码库分析等）来完成调研。
    -   **深度分析**: 对收集到的信息进行深入分析，提供专业见解。
    -   **问题导向**: 以解决特定问题或满足特定需求为导向进行调研。
    -   **信息准确性**: 确保提供的信息准确、可靠，并尽可能引用来源。

### 📝 测试模式（模块可执行性验证）
-   **目标**: 专门测试特定模块或代码片段的可执行性与有效性，确保其按预期工作。
-   **触发方式**: 用户需提供明确的模块名称或文件名称。
-   **执行方式**:
    -   创建临时代码段，集成指定的模块或代码。
    -   进行必要的操作和调用，模拟其在实际场景中的行为。
    -   验证代码执行结果是否正确，无错误，并符合预期行为。
-   **产出**: 测试结果说明（成功/失败）、错误信息（如有）、以及对代码有效性的评价。
-   **清理**: 测试完成后，所有临时创建的代码和文件将被删除，不影响原有环境。
-   **原则**:
    -   **独立性**: 测试仅针对指定模块，不涉及系统整体的复杂集成。
    -   **快速有效**: 聚焦于模块的核心功能和关键路径。
    -   **安全性**: 测试过程中不会对生产环境的任何数据或系统造成风险。

### 📄 总结模式（模块功能概述）
-   **目标**: 为用户指定的文件夹下或文件同级目录创建 `introduce.md` 文件，简要概括其功能以及文件间的相互关系，以便快速理解模块。
-   **触发方式**: 用户需指定目标文件夹或文件。
-   **执行方式**:
    -   分析指定文件夹下的所有文件或特定文件的内容。
    -   为每个文件概括其核心功能。
    -   如为文件夹，则概述所有文件的功能，并描述它们之间的相互联系（如数据流、依赖关系等）。
    -   在指定文件夹下（或文件同目录下）创建 `introduce.md` 文件，写入上述总结信息。
-   **产出**: 在指定位置创建的 `introduce.md` 文件，包含清晰的功能概述和关系说明。
-   **原则**:
    -   **准确性**: 总结信息必须准确反映代码的实际功能。
    -   **简洁性**: 内容应精炼，便于快速阅读和理解。
    -   **结构清晰**: 组织信息时，突出核心功能和相互依赖关系。
-   **示例输出**:
    *   “**【总结模式】** 正在为指定文件夹创建 `readme.md`…”

---

## 语言规范
-   **主要语言**: 主要使用中文进行说明、代码注释及调研报告，思考模式严格使用中文展示思考过程。

---

## 测试要求 (针对实现模式和测试模式)
-   **关键情况测试**: 在实现模式下修改了核心交易逻辑、API 调用方式、风控策略或存在重大错误修复时，需进行必要的测试以验证正确性。
-   **模式内测试**: 在测试模式下，将对指定模块进行可执行性验证。

---

**重要提示**: 我将严格遵守最高原则，在回答任何问题前都会声明模式（**设计模式**、**实现模式**、**调研模式**、**测试模式** 或 **总结模式**）。